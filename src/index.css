@tailwind base;
@tailwind components;
@tailwind utilities;

/* Modern Portfolio Design System - Futuristic Theme */
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700;900&family=Inter:wght@300;400;500;600;700&display=swap');

@layer base {
  :root {
    /* Core Colors - Dark Theme Primary */
    --background: 220 20% 6%;
    --foreground: 210 40% 98%;

    /* Added gradient-hero background for visibility fix */
    --gradient-hero: linear-gradient(135deg, hsl(220 20% 6%), hsl(240 30% 15%));

    /* Card System */
    --card: 220 20% 8%;
    --card-foreground: 210 40% 98%;
    --card-glass: 220 20% 12%;

    /* Interactive Elements */
    --popover: 220 20% 8%;
    --popover-foreground: 210 40% 98%;

    /* Brand Colors - Futuristic Blue/Purple Gradient */
    --primary: 240 100% 70%;
    --primary-foreground: 210 40% 98%;
    --primary-glow: 260 100% 80%;

    /* Secondary Accent - Cyan */
    --secondary: 180 100% 70%;
    --secondary-foreground: 220 20% 8%;

    /* Muted Elements */
    --muted: 220 20% 15%;
    --muted-foreground: 215 20% 65%;

    /* Accent - Purple */
    --accent: 280 100% 75%;
    --accent-foreground: 220 20% 8%;

    /* Status Colors */
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;
    --success: 120 100% 50%;
    --warning: 45 100% 60%;

    /* UI Elements */
    --border: 220 20% 20%;
    --input: 220 20% 15%;
    --ring: 240 100% 70%;

    /* Advanced Gradients & Effects */
    --gradient-mesh: conic-gradient(from 0deg at 50% 50%, hsl(240 100% 70%), hsl(260 100% 80%), hsl(280 100% 75%), hsl(300 100% 70%), hsl(240 100% 70%));
    --gradient-radial: radial-gradient(circle at 50% 50%, hsl(240 100% 70% / 0.3), transparent 70%);
    --gradient-noise: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.05'/%3E%3C/svg%3E");
    
    /* Particle System */
    --particle-count: 50;
    --particle-speed: 20s;

    /* Shadows & Glows */
    --shadow-glow: 0 0 50px hsl(240 100% 70% / 0.3);
    --shadow-glass: 0 8px 32px hsl(220 20% 2% / 0.4);
    --shadow-card: 0 4px 16px hsl(220 20% 2% / 0.3);

    /* Animation Values */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);

    --radius: 1rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .light {
    /* Light Mode Override */
    --background: 210 40% 98%;
    --foreground: 220 20% 6%;
    --card: 0 0% 100%;
    --card-foreground: 220 20% 6%;
    --muted: 210 40% 92%;
    --muted-foreground: 215 16% 35%;
    --border: 214 31% 91%;
    --input: 214 31% 91%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-inter;
    background: var(--gradient-hero);
    min-height: 100vh;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-orbitron;
  }
}

@layer components {
  /* Glass Morphism Effect */
  .glass-card {
    background: var(--gradient-glass);
    backdrop-filter: blur(20px);
    border: 1px solid hsl(var(--border) / 0.2);
    box-shadow: var(--shadow-glass);
  }

  /* Glow Effects */
  .glow-primary {
    box-shadow: var(--shadow-glow);
  }

  /* Hero Animations */
  .hero-float {
    animation: heroFloat 6s ease-in-out infinite;
  }

  @keyframes heroFloat {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(1deg); }
  }

  /* Typing Animation */
  .typing-animation {
    border-right: 2px solid hsl(var(--primary));
    animation: blink 1s infinite;
  }

  @keyframes blink {
    0%, 50% { border-color: transparent; }
    51%, 100% { border-color: hsl(var(--primary)); }
  }

  /* Skill Progress Animation */
  .skill-progress {
    position: relative;
    overflow: hidden;
  }

  .skill-progress::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsl(var(--primary) / 0.3), transparent);
    animation: skillShimmer 2s infinite;
  }

  @keyframes skillShimmer {
    0% { left: -100%; }
    100% { left: 100%; }
  }

  /* Gradient Text */
  .gradient-text {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Hover Lift Effect */
  .hover-lift {
    transition: var(--transition-smooth);
  }

  .hover-lift:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-glow);
  }

  /* Scroll Reveal Animation */
  .scroll-reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
  }

  .scroll-reveal.revealed {
    opacity: 1;
    transform: translateY(0);
  }

  /* Advanced Futuristic Effects */
  .neo-card {
    background: linear-gradient(145deg, hsl(var(--card)) 0%, hsl(var(--card-glass)) 100%);
    border: 1px solid hsl(var(--primary) / 0.2);
    box-shadow: 
      inset 0 1px 0 hsl(var(--primary) / 0.1),
      0 4px 32px hsl(var(--primary) / 0.1),
      0 1px 3px hsl(220 20% 2% / 0.3);
    position: relative;
    overflow: hidden;
  }

  .neo-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsl(var(--primary) / 0.05), transparent);
    transition: left 0.8s ease;
  }

  .neo-card:hover::before {
    left: 100%;
  }

  /* Particle Background */
  .particle-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
  }

  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: hsl(var(--primary));
    border-radius: 50%;
    animation: float var(--particle-speed) infinite linear;
    opacity: 0.6;
  }

  @keyframes float {
    0% {
      transform: translateY(100vh) rotate(0deg);
      opacity: 0;
    }
    10% {
      opacity: 0.6;
    }
    90% {
      opacity: 0.6;
    }
    100% {
      transform: translateY(-100vh) rotate(360deg);
      opacity: 0;
    }
  }

  /* Holographic Effect */
  .holographic {
    background: linear-gradient(45deg, 
      hsl(var(--primary)) 0%,
      hsl(var(--secondary)) 25%,
      hsl(var(--accent)) 50%,
      hsl(var(--secondary)) 75%,
      hsl(var(--primary)) 100%
    );
    background-size: 200% 200%;
    animation: holographicShift 3s ease-in-out infinite;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  @keyframes holographicShift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  /* 3D Transform Cards */
  .card-3d {
    transform-style: preserve-3d;
    transition: transform 0.6s cubic-bezier(0.23, 1, 0.320, 1);
  }

  .card-3d:hover {
    transform: rotateY(10deg) rotateX(10deg) translateZ(20px);
  }

  /* Cyberpunk Grid */
  .cyber-grid {
    background-image: 
      linear-gradient(hsl(var(--primary) / 0.1) 1px, transparent 1px),
      linear-gradient(90deg, hsl(var(--primary) / 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: gridMove 20s linear infinite;
  }

  @keyframes gridMove {
    0% { background-position: 0 0; }
    100% { background-position: 50px 50px; }
  }

  /* Glitch Effect */
  .glitch {
    position: relative;
    animation: glitch 2s infinite;
  }

  @keyframes glitch {
    0%, 90%, 100% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
  }

  /* Energy Pulse */
  .energy-pulse {
    position: relative;
  }

  .energy-pulse::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border: 2px solid hsl(var(--primary));
    border-radius: inherit;
    transform: translate(-50%, -50%) scale(1);
    animation: energyPulse 2s infinite;
    opacity: 0;
  }

  @keyframes energyPulse {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(1.5);
      opacity: 0;
    }
  }

  /* Matrix Rain Effect */
  .matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    opacity: 0.1;
  }

  /* Interactive Hexagon Grid */
  .hex-grid {
    background-image: radial-gradient(circle at 50% 50%, hsl(var(--primary) / 0.1) 2px, transparent 2px);
    background-size: 30px 30px;
    animation: hexMove 15s linear infinite;
  }

  @keyframes hexMove {
    0% { background-position: 0 0; }
    100% { background-position: 30px 30px; }
  }

  /* Neon Border */
  .neon-border {
    border: 1px solid hsl(var(--primary));
    box-shadow: 
      0 0 5px hsl(var(--primary)),
      inset 0 0 5px hsl(var(--primary));
    animation: neonGlow 2s ease-in-out infinite alternate;
  }

  @keyframes neonGlow {
    from {
      box-shadow: 
        0 0 5px hsl(var(--primary)),
        inset 0 0 5px hsl(var(--primary));
    }
    to {
      box-shadow: 
        0 0 20px hsl(var(--primary)),
        0 0 30px hsl(var(--primary)),
        inset 0 0 10px hsl(var(--primary));
    }
  }

  /* Floating Action Button */
  .fab {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    z-index: 1000;
    border-radius: 50%;
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--gradient-primary);
    box-shadow: var(--shadow-glow);
    transition: var(--transition-smooth);
  }

  .fab:hover {
    transform: scale(1.1) rotate(10deg);
    box-shadow: 0 0 30px hsl(var(--primary) / 0.5);
  }

  /* Loading Spinner */
  .futuristic-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid hsl(var(--muted));
    border-top: 3px solid hsl(var(--primary));
    border-radius: 50%;
    animation: spin 1s linear infinite;
    position: relative;
  }

  .futuristic-spinner::after {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    border: 3px solid transparent;
    border-top: 3px solid hsl(var(--accent));
    border-radius: 50%;
    animation: spin 1.5s linear infinite reverse;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
}